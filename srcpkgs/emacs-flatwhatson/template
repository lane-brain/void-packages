# Template file for 'emacs-flatwhatson'
_git_sha=27ef79f57166da9e0fb744fea981d702feb71218
pkgname=emacs-flatwhatson
version=28.0.50.${_git_sha:0:7}
revision=1
build_style=gnu-configure
configure_args="--with-file-notification=inotify --with-modules 
 --without-gconf --without-gsettings --with-nativecomp --with-gameuser=:games 
 $(vopt_with jpeg) $(vopt_with tiff) $(vopt_with gif) $(vopt_with png)
 $(vopt_with xpm) $(vopt_with svg rsvg) $(vopt_with imagemagick)
 $(vopt_with xml xml2) $(vopt_with gnutls) $(vopt_with sound) $(vopt_with m17n m17n-flt)
 $(vopt_with json) $(vopt_with harfbuzz) $(vopt_with cairo) $(vopt_with gmp libgmp)"
hostmakedepends="pkg-config tar automake texinfo git"
makedepends="ncurses-devel libXaw-devel gtk+-devel gtk+3-devel webkit2gtk-devel
 dbus-devel acl-devel libgccjit libmagick-devel git libmagick
 $(vopt_if jpeg libjpeg-turbo-devel) $(vopt_if tiff tiff-devel)
 $(vopt_if gif giflib-devel) $(vopt_if png libpng-devel) $(vopt_if xpm libXpm-devel)
 $(vopt_if svg librsvg-devel) $(vopt_if imagemagick libmagick-devel)
 $(vopt_if xml libxml2-devel) $(vopt_if gnutls gnutls-devel)
 $(vopt_if sound alsa-lib-devel) $(vopt_if m17n m17n-lib-devel)
 $(vopt_if json jansson-devel) $(vopt_if harfbuzz harfbuzz-devel)
 $(vopt_if cairo cairo-devel) $(vopt_if gmp gmp-devel)"
depends="emacs-flatwhatson-common-${version}_${revision}"
short_desc="GNU Emacs editor (pure-gtk & nativecomp)"
maintainer="lane-brain <lane@mailbox.org>"
license="GPL-3.0-or-later"
homepage="http://www.gnu.org/software/emacs/"
replaces="emacs>=0"
nostrip=yes
nocross=yes
nopie=yes
wrksrc="emacs-${version}"

# Package build options
build_options="nox x11 gtk2 gtk3 jpeg tiff gif png xpm svg xml imagemagick gnutls sound m17n dbus 
    json harfbuzz cairo gmp fastboot lto"
desc_option_lto="Enable Link Time Optimization for build"
desc_option_xpm="Enable support for XPM images"
desc_option_sound="Enable support for sound"
desc_option_m17n="Enable support for m17n multilingual text processing"
#build_options_default="nox x11 gtk2 gtk3 jpeg tiff gif png xpm svg xml gnutls sound m17n json gmp"
build_options_default="nox x11 gtk2 gtk3 jpeg tiff gif png xpm svg xml gnutls sound m17n json gmp 
    imagemagick dbus cairo harfbuzz lto fastboot"

do_fetch() {
    [[ -d ${wrksrc} ]] || git clone git://github.com/flatwhatson/emacs.git ${wrksrc}
    cd ${wrksrc} 
    [[ $(git rev-parse HEAD) == ${_git_sha} ]] || git checkout ${_git_sha}
}

pre_configure() {
    ./autogen.sh

}

do_configure() {
		cd $wrksrc
		./configure --with-x-toolkit=gtk3 --with-pgtk --with-xwidgets ${configure_args}
}

do_build() {
    ## Added from Arch PKGBUILD
    CFLAGS+=" -g" 
    CXXFLAGS+=" -g"
    
    if [[ "$build_option_lto" ]]; then
        CFLAGS+=" -flto"
        CXXFLAGS+=" -flto"
    fi

    export LD="/usr/bin/ld.gold"
    export CFLAGS+=" -fuse-ld=gold"
    export CXXFLAGS+=" -fuse-ld=gold"

        if [[ "$build_option_fastboot" ]]; then
            make NATIVE_FAST_BOOT=1 ${makejobs} 
        else
            make NATIVE_FULL_AOT=1 ${makejobs} 
        fi
}

do_install() {
	make DESTDIR=${PKGDESTDIR} -C ${wrksrc} install
    make DESTDIR=${PKGDESTDIR} -C ${wrksrc}   install-eln
}

emacs-flatwhatson-common_package() {
	short_desc+=" - common files"
	archs=noarch
	provides="emacs-common-${version}_${revision}"
    replaces="emacs-common>=0"
    pkg_install() {
		vmove usr/share/emacs
		vmove usr/share/man
		vmove usr/share/info
		rm -f ${PKGDESTDIR}/usr/share/info/info.info.gz
	}
}


